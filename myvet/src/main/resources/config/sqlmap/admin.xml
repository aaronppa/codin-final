<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.codin.repository.mapper.AdminMapper">
	<resultMap type="Notice" id="noticeMap">
		<result column="notice_no" property="noticeNo"/>		
		<result column="notice_title" property="noticeTitle"/>		
		<result column="notice_writer" property="noticeWriter"/>		
		<result column="notice_reg_date" property="noticeRegDate"/>		
		<result column="notice_view_cnt" property="noticeViewCnt"/>		
		<result column="notice_content" property="noticeContent"/>		
		<result column="temp_save" property="tempSave"/>
 		<association column="notice_writer" property="member" select="selectMemberByNo"></association>
	</resultMap>
		
	<resultMap type="Member" id="memberMap">
		<result column="member_no" property="memberNo"/>
		<result column="member_email" property="memberEmail"/>
		<result column="password" property="password"/>
		<result column="member_grade" property="memberGrade"/>
		<result column="member_name" property="memberName"/>
		<result column="member_phone" property="memberPhone"/>
		<result column="member_nickname" property="memberNickname"/>
		<result column="hos_code" property="hosCode"/>
		<result column="member_career" property="memberCareer"/>
		<result column="mailing_opt" property="mailingOpt"/>
		<result column="member_ori_name" property="memberOriName"/>
		<result column="member_sys_name" property="memberSysName"/>
		<result column="member_file_path" property="memberFilePath"/>
		<result column="member_file_size" property="memberFileSize"/>
		<result column="member_file_reg_date" property="memberFileRegDate"/>
	</resultMap>
	
	<select id="noticeList" parameterType="Search" resultMap="noticeMap">
		select *
		from notice
		<where>
			<if test="memberId!=null and memberId!=''">
				notice_writer = #{memberId}
			</if>
			<if test="keyword!=null and keyword!=''">
				and concat(notice_title, notice_content) like CONCAT('%',#{keyword},'%')
			</if>
			<if test="status==1">
				and temp_save = #{status}
			</if>
		</where>
		order by notice_no desc
		limit #{begin}, #{pageNum}
	</select>
	
	<select id="memberList" parameterType="Search" resultMap="memberMap">
		select *
		from member
		<where>
			<if test="memberType!=null and memberType!=''">
				member_grade = #{memberType}
			</if>
			<choose>
			<when test="memberId=='account'">
				and member_email like CONCAT('%',#{keyword},'%')
			</when>
			<when test="memberId=='nickname'">
				and member_nickname like CONCAT('%',#{keyword},'%')
			</when>
			<when test="memberId=='name'">
				and member_name like CONCAT('%',#{keyword},'%')
			</when>
			</choose>
		</where>
		order by member_no desc
		limit #{begin}, #{pageNum}
	</select>
	
	<select id="noticeDetail" parameterType="int" resultMap="noticeMap">
		select *
		from notice
		where notice_no = #{no}
	</select>
	
	<select id="noticeCount" parameterType="Search" resultType="int">
		select count(*)
		from notice
		<where>
			<if test="memberId!=null and memberId!=''">
				notice_writer = #{memberId}
			</if>
			<if test="keyword!=null and keyword!=''">
				and concat(notice_title, notice_content) like CONCAT('%',#{keyword},'%')
			</if>
			<if test="status==1">
				and temp_save = #{status}
			</if>
		</where>
	</select>
	
	<select id="memberCount" parameterType="Search" resultType="int">
		select count(*)
		from member
		<where>
			<if test="memberType!=null and memberType!=''">
				member_grade = #{memberType}
			</if>
			<choose>
			<when test="memberId=='account'">
				and member_email like CONCAT('%',#{keyword},'%')
			</when>
			<when test="memberId=='nickname'">
				and member_nickname like CONCAT('%',#{keyword},'%')
			</when>
			<when test="memberId=='name'">
				and member_name like CONCAT('%',#{keyword},'%')
			</when>
			</choose>
		</where>
	</select>
	
	<select id="selectMemberByNo" parameterType="int" resultMap="memberMap">
		select *
		from member
		where member_no=#{noticeWriter}
	</select>
	
	<insert id="insertNotice" parameterType="Notice">
		insert into notice(
				notice_title, notice_writer, notice_content
			) values (
				#{noticeTitle}, #{noticeWriter},#{noticeContent}
			)
	</insert>
	
	<insert id="insertNoticeSave" parameterType="Notice">
		insert into notice(
				notice_title, notice_writer, notice_content, temp_save
			) values (
				#{noticeTitle}, #{noticeWriter},#{noticeContent}, 1
			)
	</insert>
	
</mapper>
