<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.codin.repository.mapper.QnaMapper">
	<resultMap type="Qna" id="QnaMap">
		<result column="qna_no" property="qnaNo" />
		<result column="board_code" property="boardCode" />
		<result column="title" property="title" />
		<result column="writer_no" property="writerNo" />
		<result column="content" property="content" />
		<result column="reg_date" property="regDate" />
		<result column="view_cnt" property="viewCnt" />
		<result column="category_code" property="categoryCode" />
		<result column="answered" property="answered" />
		
	<!-- 	<association property="recomCnt" column="qna_no" select="countRecommend"></association>
		<association property="commentCount" column="qna_no"
			select="countComment"></association>
		<collection property="member" resultMap="memberMap"></collection>
		<collection property="category" resultMap="QnaCategoryMap"></collection>
 -->
	</resultMap>


	<resultMap type="Member" id="memberMap">
		<result column="member_no" property="memberNo" />
		<result column="member_email" property="memberEmail" />
		<result column="password" property="password" />
		<result column="member_grade" property="memberGrade" />
		<result column="member_name" property="memberName" />
		<result column="member_phone" property="memberPhone" />
		<result column="member_nickname" property="memberNickname" />
		<result column="hos_code" property="hosCode" />
		<result column="member_career" property="memberCareer" />
		<result column="mailing_opt" property="mailingOpt" />
		<result column="member_ori_name" property="memberOriName" />
		<result column="member_sys_name" property="memberSysName" />
		<result column="member_file_path" property="memberFilePath" />
		<result column="member_file_size" property="memberFileSize" />
		<result column="member_file_reg_date" property="memberFileRegDate" />
	</resultMap>

	<resultMap type="QnaCategoryList" id="QnaCategoryMap">
		<result column="category_code" property="categoryCode" />
		<result column="category_name" property="categoryName" />
	</resultMap>

	<resultMap type="QnaComment" id="QnaCommentMap">
		<result column="comment_no" property="commentNo" />
		<result column="qna_no" property="qnaNo" />
		<result column="commenter_no" property="commenterNo" />
		<result column="content" property="content" />
		<result column="reg_date" property="regDate" />
		<result column="pick" property="pick" />


	</resultMap>
	<resultMap type="QnaRecommend" id="QnaRecommendMap">
		<result column="no" property="no" />
		<result column="member_no" property="memberNo" />
		<result column="qna_no" property="qnaNo" />
		<result column="recommend" property="recommend" />


	</resultMap>
	<resultMap type="QnaCommentRecommend" id="QnaCommentRecommendMap">
		<result column="no" property="no" />
		<result column="member_no" property="memberNo" />
		<result column="comment_no" property="commentNo" />
		<result column="recommend" property="recommend" />


	</resultMap>






	<select id="countRecommend" parameterType="int" resultMap="QnaMap">
		select sum(recommend)
		from qna_recommend
		where qna_no = #{qnaNo}
	</select>

	<select id="countComment" parameterType="int" resultMap="QnaMap">
		select
		count(comment_no)
		from qna_comment
		where qna_no = #{qnaNo}
	</select>
	
	
	<select id="qnaListCnt" parameterType="SearchQna" resultType="int">
		select count(*)
			from qna q
			
			<where>
			<choose>
				
				<when test="answered == 1">
				 	q.answered = 'Y'
				</when>
				<when test="answered ==2">
				 	q.answered='N'
				</when>		
			</choose>
			<choose>
				
			</choose>
			<choose>
				
				<when test="categoryCode==1">
					 and q.category_code=1
				</when>
				<when test="categoryCode==2">
					 and q.category_code=2
				</when>		
			</choose>
			<!-- order by q.qna_no desc -->
		
			<choose>
			
				<when test="sort==1">
					and q.title like CONCAT('%',#{keyword},'%') 
				</when>
				<when test="sort==2">
					 and q.content like CONCAT('%',#{keyword},'%') 
				</when>
				<when test="sort==3">
					and (select member_nickname from member where member_no = q.writer_no) like CONCAT('%',#{keyword},'%') 
				</when>
				<when test="sort==4">
					 and (  (  q.title like CONCAT( '%',#{keyword},'%' ) or   q.content like CONCAT('%',#{keyword},'%')  )  )
				</when>
			</choose>
		</where>
			<choose>
				<when test="order==0">
					order by q.qna_no desc
					
				</when>
				<when test="order==1">
					order by q.view_cnt desc
				</when>
				<when test="order==2">
					order by q.view_cnt asc
				</when>
				<when test="order==3">
					order by (select sum(recommend) recomCnt from qna_recommend where qna_no = q.qna_no)  desc
				</when>
				<when test="order==4">
					order by (select sum(recommend) recomCnt from qna_recommend where qna_no = q.qna_no)  asc
				</when>
				<when test="order==5">
					order by q.reg_date desc
				</when>
				<when test="order==6">
					order by q.reg_date asc
				</when>
				
			</choose>
			
	</select>
	
	<select id="qnaList" parameterType="SearchQnA" resultMap="QnaMap" flushCache="true" useCache="false">
		select q.qna_no ,q.title
				,(select member_nickname from member where member_no = q.writer_no) memberNickname
				, (select count(qna_no) from qna_comment where qna_no=q.qna_no) 
				commentCount
				,ifnull((select sum(recommend) from qna_recommend where qna_no = q.qna_no),0) recomCnt
				, q.view_cnt
				,q.reg_date
				,(select category_name from qna_category_list where category_code=
				q.category_code) categoryName
				,q.answered
			from qna q
			<where>
				<choose>
					<when test="answered==1">
					 	q.answered = 'Y'
					</when>
					<when test="answered ==2">
					 	q.answered='N'
					</when>		
				</choose>
				<choose>
					<when test="categoryCode==1">
						 and q.category_code=1
					</when>
					<when test="categoryCode==2">
						 and q.category_code=2
					</when>		
				</choose>
				<choose>
					<when test="sort==1">
						 and q.title like CONCAT('%',#{keyword},'%') 
					</when>
					<when test="sort==2">
						 and q.content like CONCAT('%',#{keyword},'%') 
					</when>
					<when test="sort==3">
						and (select member_nickname from member where member_no = q.writer_no) like CONCAT('%',#{keyword},'%') 
					</when>
					<when test="sort==4">
						  and (  (  q.title like CONCAT( '%',#{keyword},'%' ) or   q.content like CONCAT('%',#{keyword},'%')  )  )
					</when>
				</choose>
			</where>
			<choose>
				<when test="order==0">
					order by q.qna_no desc
				</when>
				<when test="order==1">
					order by q.view_cnt desc
				</when>
				<when test="order==2">
					order by q.view_cnt asc
				</when>
				<when test="order==3">
					order by ifnull(recomCnt,0)  desc
				</when>
				<when test="order==4">
					order by ifnull(recomCnt,0)  asc
				</when>
				<when test="order==5">
					order by q.reg_date desc
				</when>
				<when test="order==6">
					order by q.reg_date asc
				</when>
			</choose>
			 limit #{presentPage},10  
	</select>

	<insert id="InsertQna" parameterType="Qna">
		insert into
		qna(title,board_code,writer_no,content,category_code)
		values(#{title},20,#{writerNo},#{content},#{categoryCode})
	</insert>
	
	<select id="categoryList" resultMap="QnaCategoryMap">
		select *
			from qna_category_list		
			
	</select>
	
	<select id="selectQnaByNo" parameterType="Qna" resultMap="QnaMap">
		select q.qna_no ,q.title
				,(select member_nickname from member where member_no = q.writer_no) memberNickname
				, (select count(qna_no) from qna_comment where qna_no=q.qna_no) 
				commentCount
				,(select sum(recommend) from qna_recommend where qna_no = q.qna_no) recomCnt
				, q.view_cnt
				,q.reg_date
				,(select category_name from qna_category_list where category_code=
				q.category_code) categoryName
				,q.answered
				,q.content
				,q.writer_no 
		from qna q
		where q.qna_no = #{qnaNo}


	</select>
	<select id="selectRecommend" parameterType="QnaRecommend" resultType="int">
		select recommend
		  from qna_recommend
		 where member_no = #{memberNo}
		   and qna_no=#{qnaNo} 
	</select>
	
	<select id="deleteRecommend" parameterType="QnaRecommend" >
		delete from qna_recommend
		 where member_no = #{memberNo}
		   and qna_no=#{qnaNo} 
	</select>
	<update id="updateViewCnt" parameterType="Qna">
		update qna
		set
		view_cnt=view_cnt+1
		where qna_no = #{qnaNo}
	</update>

	<update id="updateQna" parameterType="Qna">
		update qna
		set title=#{title} , content= #{content} , category_code =
		#{categoryCode}
		where qna_no = #{qnaNo} and writer_no=#{writerNo}
	</update>

	<delete id="deleteQna" parameterType="Qna">
		delete from qna
		where qna_no =#{qnaNo} and writer_no = #{writerNo}
	</delete>

	<insert id="insertComment" parameterType="QnaComment">
		insert into
		qna_comment(qna_no,commenter_no,content)
		values(#{qnaNo},#{commenterNo},#{content})
	</insert>
	<select id="sumrecommend" parameterType="int" resultType="int">
		select sum(recommend) recommend
			from qna_recommend
			where qna_no = #{qnaNo}
	</select>
	<select id="selectCombyNo" parameterType="QnaComment" resultMap="QnaCommentMap">
		select q.* 
		,(select member_nickname from member where member_no = q.commenter_no) memberNickname
		, (select sum(recommend) from qna_comment_recommend where comment_no=q.comment_no) recommendCnt
		, (select member_grade from member where member_no = q.commenter_no) memberGrade
		from qna_comment q
		where qna_no = #{qnaNo}
		order by pick = 'Y' desc
	</select>
	
	
	<select id="QnaRecomCheck">
		select *
		from qna_recommend
		where member_no =#{memberNo} and qna_no = #{qnaNo} 
	</select>
	<insert id="insertRecommendlike" parameterType="QnaRecommend">
		insert into qna_recommend(member_no,qna_no,recommend) values(#{memberNo},#{qnaNo},#{recommend})
	</insert>
	
	<delete id="deleteComment">
		delete from qna_comment
		where comment_no =#{commentNo} and commenter_no = #{commenterNo}
	
	</delete>
	
	<update id="updateQnaComment" >
		update qna_comment
		set content= #{content}
		where comment_no = #{commentNo} and commenter_no= #{commenterNo}
	</update>
	
	<select id="countTotalContent" resultType="int">
		select count(qna_no)
			from qna
	</select>
	
	<update id="updateAnswer" parameterType="Qna">
			update qna
		set answered='Y'
		where qna_no = #{qnaNo} 
	</update>
	
	<update id="updateCommentPick" parameterType="QnaComment">
			update qna_comment
		set pick = 'Y'
		where comment_no = #{commentNo}
	</update>
	<select id="selectPickCom" parameterType="QnaComment" resultMap="QnaCommentMap">
		select q.* 
		,(select member_nickname from member where member_no = q.commenter_no) memberNickname
		, (select sum(recommend) from qna_comment_recommend where comment_no=q.comment_no) recommendCnt
		from qna_comment q
		where qna_no = #{qnaNo} and pick='Y'
		order by comment_no asc
	</select>
	
	
	<select id="selectPickCom111" parameterType="QnaComment" resultType="string">
		select answered
			from qna
			where qna_no = #{qnaNo}
	</select>
</mapper>
